{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Generated API documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/test": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "getTestTable",
        "summary": "Retrieve records from test_table",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by id"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "pending"
              ]
            },
            "description": "Filter by status"
          },
          {
            "name": "user_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "user",
                "guest"
              ],
              "description": "Type of user account"
            },
            "description": "Filter by user_type"
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [],
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "active",
                          "inactive",
                          "pending"
                        ]
                      },
                      "user_type": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "user",
                          "guest"
                        ],
                        "description": "Type of user account"
                      }
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "status": "ACTIVE",
                  "user_type": "admin"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "message": "Invalid request parameters"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Authentication required"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "createTestTable",
        "summary": "Create a new record in test_table",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "pending"
                    ]
                  },
                  "user_type": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "user",
                      "guest"
                    ],
                    "description": "Type of user account"
                  }
                }
              },
              "example": {
                "status": "ACTIVE",
                "user_type": "admin"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the created record"
                    },
                    "message": {
                      "type": "string",
                      "example": "Record created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "message": "Invalid request body"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Authentication required"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Token"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "test",
      "description": "Operations related to test"
    }
  ]
}